<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[HOANG]]></title>
  <link href="http://hddt.github.io/atom.xml" rel="self"/>
  <link href="http://hddt.github.io/"/>
  <updated>2015-04-24T01:42:03+07:00</updated>
  <id>http://hddt.github.io/</id>
  <author>
    <name><![CDATA[Hoang Truong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Test Some Language With Coderay]]></title>
    <link href="http://hddt.github.io/blog/2015/04/test-some-language-with-coderay/"/>
    <updated>2015-04-07T02:11:09+07:00</updated>
    <id>http://hddt.github.io/blog/2015/04/test-some-language-with-coderay</id>
    <content type="html"><![CDATA[<p>for testing some code</p>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://hddt.github.io">My Blog </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="preprocessor">#include</span> <span class="include">&lt;SFML/Window.hpp&gt;</span>
<span class="preprocessor">#include</span> <span class="include">&lt;SFML/Graphics.hpp&gt;</span>
<span class="preprocessor">#include</span> <span class="include">&lt;SFML/Audio.hpp&gt;</span>

<span class="predefined-type">int</span> main(<span class="predefined-type">int</span> argc, <span class="predefined-type">char</span>* argv[])
{
  sf::RenderWindow window(sf::VideoMode(<span class="integer">640</span>, <span class="integer">480</span>), <span class="string"><span class="delimiter">&quot;</span><span class="content">SFML Music test</span><span class="delimiter">&quot;</span></span>);
  sf::Music music;
  music.openFromFile(<span class="string"><span class="delimiter">&quot;</span><span class="content">menu.ogg</span><span class="delimiter">&quot;</span></span>);
  music.setLoop(<span class="predefined-constant">true</span>);
  music.play();

  <span class="keyword">while</span> (window.isOpen()) {
    window.clear();
  }
}
</pre></div>
</div>
 </figure></notextile></div>
<!--more-->

<h2 id="just-tesing-some-code-are-you-ready">Just tesing some code, Are you ready?</h2>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://hddt.github.io">My Blog </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="tag">&lt;div</span> <span class="attribute-name">data-slick</span>=<span class="string"><span class="delimiter">&quot;</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
    <span class="tag">&lt;div</span> <span class="attribute-name">data-slick-panel</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">slick-panel-1</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
        <span class="tag">&lt;img</span> <span class="attribute-name">class</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">th</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">src</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">assets/demo/demo1.jpg</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
    <span class="tag">&lt;/div&gt;</span>
    <span class="tag">&lt;div</span> <span class="attribute-name">data-slick-panel</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">slick-panel-2</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
        <span class="tag">&lt;img</span> <span class="attribute-name">class</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">th</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">src</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">assets/demo/demo2.jpg</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
    <span class="tag">&lt;/div&gt;</span>
<span class="tag">&lt;/div&gt;</span>

<span class="tag">&lt;div</span> <span class="attribute-name">class</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">slick-panels-wrapper</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
    <span class="tag">&lt;div</span> <span class="attribute-name">class</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">slick-panel-1 slick-panel</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
        <span class="tag">&lt;h3&gt;</span>HEADER 1<span class="tag">&lt;/h3&gt;</span><span class="tag">&lt;img</span> <span class="attribute-name">class</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">th</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">src</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">assets/demo/demo1.jpg</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
    <span class="tag">&lt;/div&gt;</span>
    <span class="tag">&lt;div</span> <span class="attribute-name">class</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">slick-panel-2 slick-panel</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
        <span class="tag">&lt;h3&gt;</span>HEADER 2<span class="tag">&lt;/h3&gt;</span><span class="tag">&lt;img</span> <span class="attribute-name">class</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">th</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">src</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">assets/demo/demo2.jpg</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
    <span class="tag">&lt;/div&gt;</span>
<span class="tag">&lt;/div&gt;</span>

<span class="tag">&lt;script</span> <span class="attribute-name">type</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">text/javascript</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
<span class="inline">
<span class="predefined">$</span>(<span class="keyword">function</span>(){
            <span class="predefined">$</span>(<span class="string"><span class="delimiter">'</span><span class="content">[data-slick]</span><span class="delimiter">'</span></span>).slick({
              <span class="key">centerMode</span>: <span class="predefined-constant">true</span>,
              <span class="key">slidesToShow</span>: <span class="integer">5</span>,
              <span class="key">focusOnSelect</span>: <span class="predefined-constant">true</span>,
              <span class="key">responsive</span>: [
                {
                  <span class="key">breakpoint</span>: <span class="integer">1024</span>,
                  <span class="key">settings</span>: {
                    <span class="key">focusOnSelect</span>: <span class="predefined-constant">true</span>,
                    <span class="key">slidesToShow</span>: <span class="integer">3</span>
                  }
                },
                {
                  <span class="key">breakpoint</span>: <span class="integer">640</span>,
                  <span class="key">settings</span>: {
                    <span class="key">arrows</span>: <span class="predefined-constant">false</span>,
                    <span class="key">slidesToShow</span>: <span class="integer">1</span>
                  }
                }
              ]
            });
            
            <span class="keyword">var</span> currentSlide = <span class="predefined">$</span>(<span class="string"><span class="delimiter">'</span><span class="content">[data-slick]</span><span class="delimiter">'</span></span>).slick(<span class="string"><span class="delimiter">'</span><span class="content">slickCurrentSlide</span><span class="delimiter">'</span></span>);         
            <span class="keyword">var</span> currentPanel = <span class="predefined">$</span>(<span class="string"><span class="delimiter">'</span><span class="content">[data-slick-index=&quot;</span><span class="delimiter">'</span></span> + currentSlide + <span class="string"><span class="delimiter">'</span><span class="content">&quot;]</span><span class="delimiter">'</span></span>).attr(<span class="string"><span class="delimiter">'</span><span class="content">data-slick-panel</span><span class="delimiter">'</span></span>);
            <span class="predefined">$</span>(<span class="string"><span class="delimiter">'</span><span class="content">.slick-panel</span><span class="delimiter">'</span></span>).hide();
            <span class="predefined">$</span>(<span class="string"><span class="delimiter">&quot;</span><span class="content">.</span><span class="delimiter">&quot;</span></span> + currentPanel).show();
            
            <span class="predefined">$</span>(<span class="string"><span class="delimiter">'</span><span class="content">[data-slick]</span><span class="delimiter">'</span></span>).on(<span class="string"><span class="delimiter">'</span><span class="content">afterChange</span><span class="delimiter">'</span></span>, <span class="keyword">function</span>(slick, currentSlide){
                <span class="keyword">var</span> currentSlide = <span class="predefined">$</span>(<span class="string"><span class="delimiter">'</span><span class="content">[data-slick]</span><span class="delimiter">'</span></span>).slick(<span class="string"><span class="delimiter">'</span><span class="content">slickCurrentSlide</span><span class="delimiter">'</span></span>);         
                <span class="keyword">var</span> currentPanel = <span class="predefined">$</span>(<span class="string"><span class="delimiter">'</span><span class="content">[data-slick-index=&quot;</span><span class="delimiter">'</span></span> + currentSlide + <span class="string"><span class="delimiter">'</span><span class="content">&quot;]</span><span class="delimiter">'</span></span>).attr(<span class="string"><span class="delimiter">'</span><span class="content">data-slick-panel</span><span class="delimiter">'</span></span>);
                <span class="predefined">$</span>(<span class="string"><span class="delimiter">'</span><span class="content">.slick-panel</span><span class="delimiter">'</span></span>).hide();
                <span class="predefined">$</span>(<span class="string"><span class="delimiter">&quot;</span><span class="content">.</span><span class="delimiter">&quot;</span></span> + currentPanel).show();
            });
            
        });</span>

<span class="tag">&lt;/script&gt;</span>
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://hddt.github.io">My Blog </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="regexp"><span class="delimiter">/</span><span class="delimiter">/</span></span> ruby
apply <span class="key">plugin</span>: <span class="string"><span class="delimiter">'</span><span class="content">findbugs</span><span class="delimiter">'</span></span>
apply <span class="key">plugin</span>: <span class="string"><span class="delimiter">'</span><span class="content">pmd</span><span class="delimiter">'</span></span>

check.dependsOn <span class="string"><span class="delimiter">'</span><span class="content">pmd</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">findbugs</span><span class="delimiter">'</span></span>

task pmd(<span class="key">type</span>: <span class="constant">Pmd</span>) {
    ignoreFailures = <span class="predefined-constant">true</span>
    ruleSetFiles = files(<span class="string"><span class="delimiter">&quot;</span><span class="content">${project.rootDir}/config/quality/pmd/pmd-ruleset.xml</span><span class="delimiter">&quot;</span></span>)
    ruleSets = []

    source fileTree(<span class="string"><span class="delimiter">&quot;</span><span class="content">src/</span><span class="delimiter">&quot;</span></span>)
    include <span class="string"><span class="delimiter">'</span><span class="content">**/*.java</span><span class="delimiter">'</span></span>
    exclude <span class="string"><span class="delimiter">'</span><span class="content">**/gen/**</span><span class="delimiter">'</span></span>

    reports {
        xml.enabled = <span class="predefined-constant">true</span>
        html.enabled = <span class="predefined-constant">true</span>
    }
}

findbugs {
    sourceSets = []
    ignoreFailures = <span class="predefined-constant">true</span>
}

task findbugs(<span class="key">type</span>: <span class="constant">FindBugs</span>) {
    excludeFilter file(<span class="string"><span class="delimiter">&quot;</span><span class="content">${project.rootDir}/config/quality/findbugs/findbugs-filter.xml</span><span class="delimiter">&quot;</span></span>)
    classes = fileTree(<span class="string"><span class="delimiter">&quot;</span><span class="content">${project.rootDir}/build/intermediates/classes/debug/</span><span class="delimiter">&quot;</span></span>)
    source = fileTree(<span class="string"><span class="delimiter">&quot;</span><span class="content">src/</span><span class="delimiter">&quot;</span></span>)
    classpath = files()
    effort = <span class="string"><span class="delimiter">'</span><span class="content">max</span><span class="delimiter">'</span></span>

    reports {
        xml.enabled = <span class="predefined-constant">true</span>
        html.enabled = <span class="predefined-constant">false</span>
    }
}

</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://hddt.github.io">My Blog </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="comment">// cplusplus</span>
<span class="preprocessor">#include</span> <span class="include">&lt;iostream&gt;</span>
<span class="preprocessor">#include</span> <span class="include">&lt;SDL.h&gt;</span>
<span class="preprocessor">#include</span> <span class="include">&lt;SDL_opengl.h&gt;</span>
<span class="preprocessor">#include</span> <span class="include">&lt;CEGUI/CEGUI.h&gt;</span>
<span class="preprocessor">#include</span> <span class="include">&lt;CEGUI/RendererModules/OpenGL/GLRenderer.h&gt;</span>
<span class="preprocessor">#include</span> <span class="include">&lt;CEGUI/XMLParserModules/Expat/XMLParser.h&gt;</span>
<span class="preprocessor">#include</span> <span class="include">&lt;CEGUI/ImageCodecModules/DevIL/ImageCodec.h&gt;</span>

<span class="predefined-type">int</span> main(<span class="predefined-type">int</span>, <span class="predefined-type">char</span>**)
{
  <span class="comment">/***************************************
   * Init SDL
   ***************************************/</span>

  <span class="keyword">if</span> (SDL_Init(SDL_INIT_EVERYTHING) != <span class="integer">0</span>){
    std::cout &lt;&lt; <span class="string"><span class="delimiter">&quot;</span><span class="content">SDL_Init Error: </span><span class="delimiter">&quot;</span></span> &lt;&lt; SDL_GetError() &lt;&lt; std::endl;
    SDL_Quit();
    <span class="keyword">return</span> <span class="integer">1</span>;
  }

  SDL_Window* p_window = SDL_CreateWindow(<span class="string"><span class="delimiter">&quot;</span><span class="content">Test window</span><span class="delimiter">&quot;</span></span>, <span class="integer">100</span>, <span class="integer">100</span>, <span class="integer">640</span>, <span class="integer">480</span>, SDL_WINDOW_SHOWN | SDL_WINDOW_OPENGL);
  <span class="keyword">if</span> (!p_window) {
    std::cerr &lt;&lt; <span class="string"><span class="delimiter">&quot;</span><span class="content">failed to set up window.</span><span class="delimiter">&quot;</span></span> &lt;&lt; std::endl;
    SDL_Quit();
    <span class="keyword">return</span> <span class="integer">2</span>;
  }

  SDL_ShowCursor(<span class="integer">0</span>);

  SDL_Renderer* p_sdl_renderer = SDL_CreateRenderer(p_window, -<span class="integer">1</span>, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);
  <span class="keyword">if</span> (!p_sdl_renderer) {
    SDL_DestroyWindow(p_window);
    SDL_Quit();
    std::cerr &lt;&lt; <span class="string"><span class="delimiter">&quot;</span><span class="content">Faield to set up renderer.</span><span class="delimiter">&quot;</span></span> &lt;&lt; std::endl;
    <span class="keyword">return</span> <span class="integer">3</span>;
  }

  <span class="comment">/***************************************
   * Init CEGUI
   ***************************************/</span>

  <span class="comment">//CEGUI::OpenGLRenderer&amp; renderer = CEGUI::OpenGLRenderer::bootstrapSystem();</span>
  CEGUI::OpenGLRenderer&amp; renderer = CEGUI::OpenGLRenderer::create();
  CEGUI::DefaultResourceProvider* p_provider = <span class="keyword">new</span> CEGUI::DefaultResourceProvider();
  CEGUI::ExpatParser* p_xml_parser = <span class="keyword">new</span> CEGUI::ExpatParser();
  CEGUI::DevILImageCodec* p_imgcodec = <span class="keyword">new</span> CEGUI::DevILImageCodec();

  CEGUI::System::create(renderer, p_provider, p_xml_parser, p_imgcodec, <span class="predefined-constant">NULL</span>);

  p_provider-&gt;setResourceGroupDirectory(<span class="string"><span class="delimiter">&quot;</span><span class="content">schemes</span><span class="delimiter">&quot;</span></span>, <span class="string"><span class="delimiter">&quot;</span><span class="content">/usr/share/cegui-0/schemes/</span><span class="delimiter">&quot;</span></span>);
  p_provider-&gt;setResourceGroupDirectory(<span class="string"><span class="delimiter">&quot;</span><span class="content">imagesets</span><span class="delimiter">&quot;</span></span>, <span class="string"><span class="delimiter">&quot;</span><span class="content">/usr/share/cegui-0/imagesets/</span><span class="delimiter">&quot;</span></span>);
  p_provider-&gt;setResourceGroupDirectory(<span class="string"><span class="delimiter">&quot;</span><span class="content">fonts</span><span class="delimiter">&quot;</span></span>, <span class="string"><span class="delimiter">&quot;</span><span class="content">/usr/share/cegui-0/fonts/</span><span class="delimiter">&quot;</span></span>);
  p_provider-&gt;setResourceGroupDirectory(<span class="string"><span class="delimiter">&quot;</span><span class="content">layouts</span><span class="delimiter">&quot;</span></span>, <span class="string"><span class="delimiter">&quot;</span><span class="content">/usr/share/cegui-0/layouts/</span><span class="delimiter">&quot;</span></span>);
  p_provider-&gt;setResourceGroupDirectory(<span class="string"><span class="delimiter">&quot;</span><span class="content">looknfeels</span><span class="delimiter">&quot;</span></span>, <span class="string"><span class="delimiter">&quot;</span><span class="content">/usr/share/cegui-0/looknfeel/</span><span class="delimiter">&quot;</span></span>);
  p_provider-&gt;setResourceGroupDirectory(<span class="string"><span class="delimiter">&quot;</span><span class="content">lua_scripts</span><span class="delimiter">&quot;</span></span>, <span class="string"><span class="delimiter">&quot;</span><span class="content">/usr/share/cegui-0/lua_scripts/</span><span class="delimiter">&quot;</span></span>);

  <span class="comment">/* Now tell each of CEGUI’s resource-consuming classes (the &quot;*Manager&quot; classes)
   * which group of the filesystem provider to ask for its stuff. */</span>
  CEGUI::ImageManager::setImagesetDefaultResourceGroup(<span class="string"><span class="delimiter">&quot;</span><span class="content">imagesets</span><span class="delimiter">&quot;</span></span>);
  CEGUI::Font::setDefaultResourceGroup(<span class="string"><span class="delimiter">&quot;</span><span class="content">fonts</span><span class="delimiter">&quot;</span></span>);
  CEGUI::Scheme::setDefaultResourceGroup(<span class="string"><span class="delimiter">&quot;</span><span class="content">schemes</span><span class="delimiter">&quot;</span></span>);
  CEGUI::WidgetLookManager::setDefaultResourceGroup(<span class="string"><span class="delimiter">&quot;</span><span class="content">looknfeels</span><span class="delimiter">&quot;</span></span>);
  CEGUI::WindowManager::setDefaultResourceGroup(<span class="string"><span class="delimiter">&quot;</span><span class="content">layouts</span><span class="delimiter">&quot;</span></span>);
  CEGUI::ScriptModule::setDefaultResourceGroup(<span class="string"><span class="delimiter">&quot;</span><span class="content">lua_scripts</span><span class="delimiter">&quot;</span></span>);

  CEGUI::SchemeManager::getSingleton().createFromFile(<span class="string"><span class="delimiter">&quot;</span><span class="content">TaharezLook.scheme</span><span class="delimiter">&quot;</span></span>);
  CEGUI::FontManager::getSingleton().createFromFile(<span class="string"><span class="delimiter">&quot;</span><span class="content">DejaVuSans-12.font</span><span class="delimiter">&quot;</span></span>);
  CEGUI::System::getSingleton().getDefaultGUIContext().setDefaultFont(<span class="string"><span class="delimiter">&quot;</span><span class="content">DejaVuSans-12</span><span class="delimiter">&quot;</span></span>);
  CEGUI::System::getSingleton().getDefaultGUIContext().getMouseCursor().setDefaultImage(<span class="string"><span class="delimiter">&quot;</span><span class="content">TaharezLook/MouseArrow</span><span class="delimiter">&quot;</span></span>);

  <span class="comment">// Tell CEGUI how large our Window is. Forget this and you’ll never see anything.</span>
  CEGUI::System::getSingleton().notifyDisplaySizeChanged(CEGUI::Sizef(<span class="integer">640</span>, <span class="integer">480</span>));

  CEGUI::WindowManager&amp; wmgr = CEGUI::WindowManager::getSingleton();
  CEGUI::Window* p_cegui_rootwin = wmgr.createWindow(<span class="string"><span class="delimiter">&quot;</span><span class="content">DefaultWindow</span><span class="delimiter">&quot;</span></span>, <span class="string"><span class="delimiter">&quot;</span><span class="content">root</span><span class="delimiter">&quot;</span></span>);
  CEGUI::System::getSingleton().getDefaultGUIContext().setRootWindow(p_cegui_rootwin);

  CEGUI::FrameWindow* p_testframe = <span class="keyword">static_cast</span>&lt;CEGUI::FrameWindow*&gt;(wmgr.createWindow(<span class="string"><span class="delimiter">&quot;</span><span class="content">TaharezLook/FrameWindow</span><span class="delimiter">&quot;</span></span>, <span class="string"><span class="delimiter">&quot;</span><span class="content">testWindow</span><span class="delimiter">&quot;</span></span>));
  p_testframe-&gt;setPosition(CEGUI::UVector2(CEGUI::UDim(<span class="float">0</span><span class="float">.25</span>, <span class="float">0</span><span class="float">.0</span>), CEGUI::UDim(<span class="float">0</span><span class="float">.25</span>, <span class="float">0</span><span class="float">.0f</span>)));
  p_testframe-&gt;setSize(CEGUI::USize(CEGUI::UDim(<span class="float">0</span><span class="float">.5f</span>, <span class="float">0</span><span class="float">.0f</span>), CEGUI::UDim(<span class="float">0</span><span class="float">.5f</span>, <span class="float">0</span><span class="float">.0f</span>)));
  p_testframe-&gt;setText(<span class="string"><span class="delimiter">&quot;</span><span class="content">Hello, World!</span><span class="delimiter">&quot;</span></span>);
  p_cegui_rootwin-&gt;addChild(p_testframe);

  glClearColor(<span class="integer">0</span>, <span class="integer">0</span>, <span class="integer">0</span>, <span class="integer">255</span>);

  SDL_Surface* p_image = SDL_LoadBMP(<span class="string"><span class="delimiter">&quot;</span><span class="content">../hello.bmp</span><span class="delimiter">&quot;</span></span>);
  SDL_Texture* p_imgtexture = SDL_CreateTextureFromSurface(p_sdl_renderer, p_image);
  SDL_FreeSurface(p_image);
  p_image = <span class="predefined-constant">NULL</span>;

  <span class="comment">/***************************************
   * Main loop
   ***************************************/</span>
  <span class="predefined-type">bool</span> quit = <span class="predefined-constant">false</span>;
  SDL_Event evt;
  <span class="keyword">while</span> (!quit) {
    <span class="comment">// Grab all events from the queue</span>
    <span class="keyword">while</span> (SDL_PollEvent(&amp;evt)) {
      <span class="keyword">if</span> (evt.type == SDL_QUIT) {
        quit = <span class="predefined-constant">true</span>;
      }
      <span class="keyword">else</span> {
        std::cout &lt;&lt; <span class="string"><span class="delimiter">&quot;</span><span class="content">Unknown event received.</span><span class="delimiter">&quot;</span></span> &lt;&lt; std::endl;
      }
    }

    SDL_RenderClear(p_sdl_renderer);
    SDL_RenderCopy(p_sdl_renderer, p_imgtexture, <span class="predefined-constant">NULL</span>, <span class="predefined-constant">NULL</span>);
    SDL_RenderPresent(p_sdl_renderer);

    SDL_GLContext context = SDL_GL_CreateContext(p_window);
    glClear(GL_COLOR_BUFFER_BIT);
    CEGUI::System::getSingleton().renderAllGUIContexts();
    SDL_GL_SwapWindow(p_window);
    SDL_GL_DeleteContext(context);
  }

  <span class="comment">/***************************************
   * Cleanup
   ***************************************/</span>

  CEGUI::System::destroy();
  CEGUI::OpenGLRenderer::destroy(renderer);
  <span class="keyword">delete</span> p_imgcodec;
  <span class="keyword">delete</span> p_xml_parser;
  <span class="keyword">delete</span> p_provider;

  SDL_DestroyTexture(p_imgtexture);
  SDL_DestroyRenderer(p_sdl_renderer);
  SDL_DestroyWindow(p_window);
  SDL_Quit();
  <span class="keyword">return</span> <span class="integer">0</span>;
}

</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://hddt.github.io">My Blog </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="line head"><span class="head">--- </span><span class="filename">a/application_templates/SDL2.cpp</span>    Sun Jan 04 18:31:27 2015 +0100</span>
<span class="line head"><span class="head">+++ </span><span class="filename">b/application_templates/SDL2.cpp</span>    Sat Mar 14 09:43:51 2015 +0100</span>
<span class="line change"><span class="change">@@</span> -40,7 +40,8 <span class="change">@@</span></span>
 <span class="preprocessor">#include</span> <span class="include">&lt;iostream&gt;</span>
 
 <span class="preprocessor">#include</span> <span class="include">&lt;CEGUI/CEGUI.h&gt;</span>
<span class="line delete"><span class="delete">-</span><span class="preprocessor">#include</span> <span class="include">&lt;CEGUI/RendererModules/OpenGL/GL3Renderer.h&gt;</span></span>
<span class="line insert"><span class="insert">+</span><span class="comment">//#include &lt;CEGUI/RendererModules/OpenGL/GL3Renderer.h&gt;</span></span>
<span class="line insert"><span class="insert">+</span><span class="preprocessor">#include</span> <span class="include">&lt;CEGUI/RendererModules/OpenGL/GLRenderer.h&gt;</span></span>
 
 <span class="preprocessor">#include</span> <span class="include">&lt;SDL.h&gt;</span>
 <span class="preprocessor">#include</span> <span class="include">&lt;SDL_opengl.h&gt;</span>
<span class="line change"><span class="change">@@</span> -161,7 +162,7 <span class="change">@@</span></span>
     <span class="directive">using</span> <span class="keyword">namespace</span> CEGUI;
 
     <span class="comment">// create renderer and enable extra states</span>
<span class="line delete"><span class="delete">-</span>    OpenGL<span class="eyecatcher">3Renderer&amp; cegui_renderer = OpenGL3</span>Renderer::create(Sizef(<span class="integer">80</span><span class="float">0</span>.f, <span class="integer">60</span><span class="float">0</span>.f));</span>
<span class="line insert"><span class="insert">+</span>    OpenGL<span class="eyecatcher">Renderer&amp; cegui_renderer = OpenGL</span>Renderer::create(Sizef(<span class="integer">80</span><span class="float">0</span>.f, <span class="integer">60</span><span class="float">0</span>.f));</span>
     cegui_renderer.enableExtraStateSettings(<span class="predefined-constant">true</span>);
 
     <span class="comment">// create CEGUI system object</span>
<span class="line change"><span class="change">@@</span> -237,7 +238,8 <span class="change">@@</span></span>
     }
 }
 
<span class="line delete"><span class="delete">-</span><span class="predefined-type">int</span> SDL_main(<span class="predefined-type">int</span> argc, <span class="predefined-type">char</span>* argv[])</span>
<span class="line insert"><span class="insert">+</span><span class="comment">//int SDL_main(int argc, char* argv[])</span></span>
<span class="line insert"><span class="insert">+</span><span class="predefined-type">int</span> main(<span class="predefined-type">int</span> argc, <span class="predefined-type">char</span>* argv[])</span>
 {
     <span class="directive">using</span> <span class="keyword">namespace</span> CEGUI;
 
<span class="line change"><span class="change">@@</span> -260,7 +262,7 <span class="change">@@</span></span>
     SDL_Event event;
     <span class="predefined-type">float</span> time = SDL_GetTicks() / <span class="integer">100</span><span class="float">0</span>.f;
 
<span class="line delete"><span class="delete">-</span>    OpenGL<span class="eyecatcher">3Renderer* renderer = <span class="keyword">static_cast</span>&lt;OpenGL3</span>Renderer*&gt;(System::getSingleton().getRenderer());</span>
<span class="line insert"><span class="insert">+</span>    OpenGL<span class="eyecatcher">Renderer* renderer = <span class="keyword">static_cast</span>&lt;OpenGL</span>Renderer*&gt;(System::getSingleton().getRenderer());</span>
 
     <span class="comment">// repeat until a quit is requested</span>
     <span class="keyword">while</span> (!quit &amp;&amp; !SDL_QuitRequested())
<span class="line change"><span class="change">@@</span> -335,7 +337,7 <span class="change">@@</span></span>
 
     <span class="comment">// destroy system and renderer</span>
     System::destroy();
<span class="line delete"><span class="delete">-</span>    OpenGL<span class="eyecatcher">3</span>Renderer::destroy(*renderer);</span>
<span class="line insert"><span class="insert">+</span>    OpenGLRenderer::destroy(*renderer);</span>
     renderer = <span class="integer">0</span>;
 
     <span class="comment">// delete SDL GL context</span>
<span class="line change"><span class="change">@@</span> -348,4 +350,4 <span class="change">@@</span></span>
     SDL_Quit();
 
     <span class="keyword">return</span> <span class="integer">0</span>;
<span class="line delete"><span class="delete">-</span>}</span>
<span class="comment">\ No newline at end of file</span>
<span class="line insert"><span class="insert">+</span>}</span>

</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://hddt.github.io">My Blog </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="comment">// c</span>
<span class="preprocessor">#include</span> <span class="include">&lt;stdio.h&gt;</span>

<span class="directive">void</span> Nhap(<span class="predefined-type">float</span> a[], <span class="predefined-type">int</span> n)
{
    printf(<span class="string"><span class="delimiter">&quot;</span><span class="content">Nhap lan luot cac he so:</span><span class="char">\n</span><span class="delimiter">&quot;</span></span>);
    <span class="keyword">for</span> (<span class="predefined-type">int</span> i = <span class="integer">0</span>; i &lt;= n; ++i)
    {
        scanf(<span class="string"><span class="delimiter">&quot;</span><span class="content">%f</span><span class="delimiter">&quot;</span></span>, &amp;a[i]);
    }
}

<span class="comment">// Ham tinh dung de quy</span>
<span class="directive">void</span> HoocnerRecurison(<span class="predefined-type">float</span> a[], <span class="predefined-type">int</span> n, <span class="predefined-type">float</span> c)
{
    <span class="keyword">if</span> (n==<span class="integer">0</span>) <span class="keyword">return</span>;
    <span class="keyword">for</span> (<span class="predefined-type">int</span> i = <span class="integer">0</span>;i &lt; n;i++)
        a[i+<span class="integer">1</span>] = a[i] *c +a[i+<span class="integer">1</span>];
    HoocnerRecurison(a,n-<span class="integer">1</span>,c);
}

<span class="comment">// Ham tinh khong dung de quy</span>
<span class="directive">void</span> Hoocner(<span class="predefined-type">float</span> a[], <span class="predefined-type">int</span> n, <span class="predefined-type">float</span> c)
{
     <span class="keyword">for</span> (<span class="predefined-type">int</span> i = n; i &gt; <span class="integer">0</span>; --i)
         <span class="keyword">for</span> (<span class="predefined-type">int</span> j=<span class="integer">0</span>; j&lt;i; j++)
             a[j+<span class="integer">1</span>] = a[j]*c + a[j+<span class="integer">1</span>];
}

<span class="directive">void</span> KetQua(<span class="predefined-type">float</span> a[], <span class="predefined-type">int</span> n, <span class="predefined-type">float</span> c)
{
    printf(<span class="string"><span class="delimiter">&quot;</span><span class="content">Cac he so cua phuong trinh</span><span class="char">\n</span><span class="delimiter">&quot;</span></span>);
    <span class="keyword">for</span> (<span class="predefined-type">int</span> i = <span class="integer">0</span>; i &lt;= n; ++i)
    {
        printf(<span class="string"><span class="delimiter">&quot;</span><span class="content">%.2f  </span><span class="delimiter">&quot;</span></span>, a[i]);
    }
}

<span class="predefined-type">int</span> main()
{
    <span class="predefined-type">int</span> n, c;
    <span class="predefined-type">float</span> a[<span class="integer">100</span>];
    printf(<span class="string"><span class="delimiter">&quot;</span><span class="content">Nhap bac phuong trinh: n= </span><span class="delimiter">&quot;</span></span>);
    scanf(<span class="string"><span class="delimiter">&quot;</span><span class="content">%d</span><span class="delimiter">&quot;</span></span>,&amp;n);
    Nhap(a,n);
    printf(<span class="string"><span class="delimiter">&quot;</span><span class="content">Nhap gia tri c: </span><span class="char">\n</span><span class="delimiter">&quot;</span></span>);
    scanf(<span class="string"><span class="delimiter">&quot;</span><span class="content">%d</span><span class="delimiter">&quot;</span></span>, &amp;c);
    HoocnerRecurison(a, n, c);
    KetQua(a,n,c);
    <span class="keyword">return</span> <span class="integer">0</span>;
}
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://hddt.github.io">My Blog </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="comment"># Python</span>
<span class="keyword">from</span> <span class="include">rest_framework</span> <span class="keyword">import</span> <span class="include">serializers</span>
<span class="keyword">from</span> <span class="include">snippets.models</span> <span class="keyword">import</span> <span class="include">Snippet</span>
<span class="keyword">from</span> <span class="include">django.contrib.auth.models</span> <span class="keyword">import</span> <span class="include">User</span>


<span class="keyword">class</span> <span class="class">SnippetSerializer</span>(serializers.HyperlinkedModelSerializer):
    owner = serializers.ReadOnlyField(source=<span class="string"><span class="delimiter">'</span><span class="content">owner.username</span><span class="delimiter">'</span></span>)
    highlight = serializers.HyperlinkedIdentityField(view_name=<span class="string"><span class="delimiter">'</span><span class="content">snippet-highlight</span><span class="delimiter">'</span></span>, format=<span class="string"><span class="delimiter">'</span><span class="content">html</span><span class="delimiter">'</span></span>)

    <span class="keyword">class</span> <span class="class">Meta</span>:
        model = Snippet
        fields = (<span class="string"><span class="delimiter">'</span><span class="content">url</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">highlight</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">owner</span><span class="delimiter">'</span></span>,
                  <span class="string"><span class="delimiter">'</span><span class="content">title</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">code</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">linenos</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">language</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">style</span><span class="delimiter">'</span></span>)


<span class="keyword">class</span> <span class="class">UserSerializer</span>(serializers.HyperlinkedModelSerializer):
    snippets = serializers.HyperlinkedRelatedField(many=<span class="predefined-constant">True</span>, view_name=<span class="string"><span class="delimiter">'</span><span class="content">snippet-detail</span><span class="delimiter">'</span></span>, read_only=<span class="predefined-constant">True</span>)

    <span class="keyword">class</span> <span class="class">Meta</span>:
        model = User
        fields = (<span class="string"><span class="delimiter">'</span><span class="content">url</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">username</span><span class="delimiter">'</span></span>, <span class="string"><span class="delimiter">'</span><span class="content">snippets</span><span class="delimiter">'</span></span>)
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
<span class="comment"># YAML</span>
<span class="key">root</span>: <span class="string"><span class="content">/</span></span>
<span class="key">permalink</span>: <span class="string"><span class="content">/blog/:year/:month/:title/</span></span>
<span class="key">source</span>: <span class="string"><span class="content">source</span></span>
<span class="key">destination</span>: <span class="string"><span class="content">public</span></span>
<span class="key">plugins</span>: <span class="string"><span class="content">plugins</span></span>
<span class="key">code_dir</span>: <span class="string"><span class="content">downloads/code</span></span>
<span class="key">category_dir</span>: <span class="string"><span class="content">blog/categories</span></span>
<span class="key">markdown</span>: <span class="string"><span class="content">kramdown</span></span>
<span class="key">kramdown</span>:
  <span class="key">use_coderay</span>: <span class="string"><span class="content">true</span></span>
  <span class="key">coderay</span>:
    <span class="key">coderay_line_numbers</span>: <span class="string"><span class="content">table</span></span>
    <span class="key">coderay_css</span>: <span class="string"><span class="content">class</span></span>
<span class="key">highlighter</span>: <span class="string"><span class="content">pygments</span></span> <span class="comment"># default python pygments have been replaced by pygments.rb</span>
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://hddt.github.io">My Blog </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
{
    <span class="key"><span class="delimiter">&quot;</span><span class="content">Books</span><span class="delimiter">&quot;</span></span>: [
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">If you're ready to create web pages more complex than what you can build with HTML and CSS, Head First PHP &amp; MySQL is the ultimate learning guide to building dynamic, database-driven websites using PHP and MySQL. Packed with real-world examples, this ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">947185260</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/3/head_first_php__mysql.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Head First PHP &amp; MySQL</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9780596006303</span><span class="delimiter">&quot;</span></span>
        }, 
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">If you know HTML, this guide will have you building interactive websites quickly. You'll learn how to create responsive, data-driven websites with PHP, MySQL, and JavaScript, regardless of whether you already know how to program. Discover how the pow ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">1283537446</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/3/learning_php_mysql_and_javascript.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">SubTitle</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">A Step-by-Step Guide to Creating Dynamic Websites</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Learning PHP, MySQL, and JavaScript</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9780596157135</span><span class="delimiter">&quot;</span></span>
        }, 
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">PHP &amp; MySQL: Novice to Ninja, 5th Edition is a hands-on guide that will help you build your first database driven website. In the fifth edition of this best-selling book, you'll learn how to use PHP (used on 20 million sites worldwide) to build your ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">4061324578</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/7/php__mysql_novice_to_ninja_5th_edition.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">SubTitle</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">The Easy Way to Build Your Own Database Driven Website</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">PHP &amp; MySQL: Novice to Ninja, 5th Edition</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9780987153081</span><span class="delimiter">&quot;</span></span>
        }, 
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Learn how to build interactive, data-driven websites - even if you don't have any previous programming experience. If you know how to build static sites with HTML, this popular guide will help you tackle dynamic web programming. You'll get a thorough ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">1290301462</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/3/learning_php_mysql_javascript_and_css_2nd_edition.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">SubTitle</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">A Step-by-Step Guide to Creating Dynamic Websites</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Learning PHP, MySQL, JavaScript, and CSS, 2nd Edition</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9781449319267</span><span class="delimiter">&quot;</span></span>
        }, 
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">In just a short time, you can learn how to use PHP, MySQL, and Apache together to create dynamic, interactive websites and applications using the three leading open-source web development technologies. Using a straightforward, step-by-step approach, ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">2594711238</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/12/sams_teach_yourself_php_mysql_and_apache_all_in_one_5th_edition.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Sams Teach Yourself PHP, MySQL and Apache All in One, 5th Edition</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9780672335433</span><span class="delimiter">&quot;</span></span>
        }, 
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Build interactive, data-driven websites with the potent combination of open-source technologies and web standards, even if you only have basic HTML knowledge. With this popular hands-on guide, you'll tackle dynamic web programming with the help of to ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">1967945201</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/3/learning_php_mysql_javascript_css__html5_3rd_edition.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">SubTitle</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">A Step-by-Step Guide to Creating Dynamic Websites</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Learning PHP, MySQL, JavaScript, CSS &amp; HTML5, 3rd Edition</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9781491949467</span><span class="delimiter">&quot;</span></span>
        }, 
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Build interactive, data-driven websites with the potent combination of open-source technologies and web standards, even if you have only basic HTML knowledge. With this popular hands-on guide, you'll tackle dynamic web programming with the help of to ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">1953139307</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/3/learning_php_mysql__javascript_4th_edition.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">SubTitle</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">With jQuery, CSS &amp; HTML5</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Learning PHP, MySQL &amp; JavaScript, 4th Edition</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9781491918661</span><span class="delimiter">&quot;</span></span>
        }, 
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">If you can build websites with CSS and JavaScript, this book takes you to the next level-creating dynamic, database-driven websites with PHP and MySQL. Learn how to build a database, manage your content, and interact with users through queries and we ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">2279690981</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/3/php__mysql_the_missing_manual.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">PHP &amp; MySQL: The Missing Manual</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9780596515867</span><span class="delimiter">&quot;</span></span>
        }, 
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Build Your Own Database Driven Web Site Using PHP &amp;amp; MySQL, 4th Edition is a practical, hands-on guide to learning all the tools, principles, and techniques needed to build a fully functional database driven web site using PHP &amp;amp; MySQL. This bo ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">441392374</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/7/build_your_own_database_driven_web_site_using_php.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Build Your Own Database Driven Web Site Using PHP &amp; MySQL, 4th Edition</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9780980576818</span><span class="delimiter">&quot;</span></span>
        }, 
        {
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Description</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Beginning PHP and MySQL: From Novice to Professional, Fourth Edition is a major update of W. Jason Gilmore's authoritative book on PHP and MySQL. The fourth edition includes complete coverage of PHP 5.3 features, including namespacing, an update of A ...</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">ID</span><span class="delimiter">&quot;</span></span>: <span class="integer">225821771</span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Image</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">http://s.it-ebooks-api.info/6/beginning_php_and_mysql_from_novice_to_professional_4th_edition.jpg</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">SubTitle</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">From Novice to Professional</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">Title</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">Beginning PHP and MySQL, 4th Edition</span><span class="delimiter">&quot;</span></span>, 
            <span class="key"><span class="delimiter">&quot;</span><span class="content">isbn</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">9781430231141</span><span class="delimiter">&quot;</span></span>
        }
    ], 
    <span class="key"><span class="delimiter">&quot;</span><span class="content">Error</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">0</span><span class="delimiter">&quot;</span></span>, 
    <span class="key"><span class="delimiter">&quot;</span><span class="content">Page</span><span class="delimiter">&quot;</span></span>: <span class="integer">1</span>, 
    <span class="key"><span class="delimiter">&quot;</span><span class="content">Time</span><span class="delimiter">&quot;</span></span>: <span class="float">0.0046</span>, 
    <span class="key"><span class="delimiter">&quot;</span><span class="content">Total</span><span class="delimiter">&quot;</span></span>: <span class="string"><span class="delimiter">&quot;</span><span class="content">180</span><span class="delimiter">&quot;</span></span>
}

</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
<span class="tag">&lt;macrodef</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">create_manifest</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
        <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">jar.classname</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
        <span class="tag">&lt;sequential&gt;</span>
            <span class="tag">&lt;manifest</span> <span class="attribute-name">file</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">jar_temp/META-INF/MANIFEST.MF</span><span class="delimiter">&quot;</span></span><span class="tag">&gt;</span>
                <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Manifest-Version</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">value</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">1.0</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
                <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Version</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">value</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">3.4</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
                <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Company</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">value</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Pubnub</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
                <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Project</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">value</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">pubnub-api</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
                <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Java-Version</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">value</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">${java.version}</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
                <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Rsrc-Class-Path</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">value</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">./ bcprov-jdk15on-1.47.jar commons-cli-1.2.jar json-simple-1.1.1.jar json-20090211.jar slf4j-api-1.7.5.jar slf4j-simple-1.7.5.jar</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
                <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Class-Path</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">value</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">.</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
                <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Rsrc-Main-Class</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">value</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">@{jar.classname}</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
                <span class="tag">&lt;attribute</span> <span class="attribute-name">name</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">Main-Class</span><span class="delimiter">&quot;</span></span> <span class="attribute-name">value</span>=<span class="string"><span class="delimiter">&quot;</span><span class="content">org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader</span><span class="delimiter">&quot;</span></span> <span class="tag">/&gt;</span>
            <span class="tag">&lt;/manifest&gt;</span>
        <span class="tag">&lt;/sequential&gt;</span>
    <span class="tag">&lt;/macrodef&gt;</span>
</pre></div>
</div>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example! </span></figcaption>
 <div class="CodeRay">
  <div class="code"><pre>
<span class="keyword">package</span> <span class="namespace">com.pubnub.api</span>;

<span class="keyword">import</span> <span class="include">java.io.ByteArrayOutputStream</span>;
<span class="keyword">import</span> <span class="include">java.util.zip.GZIPInputStream</span>;
<span class="keyword">import</span> <span class="include">java.io.IOException</span>;
<span class="keyword">import</span> <span class="include">java.io.InputStream</span>;
<span class="keyword">import</span> <span class="include">java.net.HttpURLConnection</span>;
<span class="keyword">import</span> <span class="include">java.net.MalformedURLException</span>;
<span class="keyword">import</span> <span class="include">java.net.ProtocolException</span>;
<span class="keyword">import</span> <span class="include">java.net.SocketTimeoutException</span>;
<span class="keyword">import</span> <span class="include">java.net.URL</span>;
<span class="keyword">import</span> <span class="include">java.util.Enumeration</span>;
<span class="keyword">import</span> <span class="include">java.util.Hashtable</span>;

<span class="keyword">import</span> <span class="include">org.json.JSONArray</span>;
<span class="keyword">import</span> <span class="include">org.json.JSONException</span>;
<span class="keyword">import</span> <span class="include">org.json.JSONObject</span>;

<span class="keyword">import</span> <span class="include">com.pubnub.api.PubnubException</span>;
<span class="keyword">import</span> <span class="include">static</span> <span class="include">com.pubnub.api.PubnubError</span>.*;

<span class="type">class</span> <span class="class">HttpClientCore</span> <span class="directive">extends</span> HttpClient {
    <span class="directive">private</span> <span class="type">int</span> requestTimeout = <span class="integer">310000</span>;
    <span class="directive">private</span> <span class="type">int</span> connectionTimeout = <span class="integer">5000</span>;
    <span class="predefined-type">HttpURLConnection</span> connection;
    <span class="directive">protected</span> <span class="directive">static</span> <span class="predefined-type">Logger</span> log = <span class="keyword">new</span> <span class="predefined-type">Logger</span>(Worker.class);

    <span class="directive">private</span> <span class="type">void</span> init() {
        <span class="predefined-type">HttpURLConnection</span>.setFollowRedirects(<span class="predefined-constant">true</span>);
    }

    <span class="directive">public</span> HttpClientCore(<span class="type">int</span> connectionTimeout, <span class="type">int</span> requestTimeout, <span class="predefined-type">Hashtable</span> headers) {
        init();
        <span class="local-variable">this</span>.setRequestTimeout(requestTimeout);
        <span class="local-variable">this</span>.setConnectionTimeout(connectionTimeout);
        <span class="local-variable">this</span>._headers = headers;
    }

    <span class="directive">public</span> <span class="type">int</span> getRequestTimeout() {
        <span class="keyword">return</span> requestTimeout;
    }

    <span class="directive">public</span> <span class="type">void</span> setRequestTimeout(<span class="type">int</span> requestTimeout) {
        <span class="local-variable">this</span>.requestTimeout = requestTimeout;
    }

    <span class="directive">public</span> <span class="type">int</span> getConnectionTimeout() {
        <span class="keyword">return</span> connectionTimeout;
    }

    <span class="directive">public</span> <span class="type">void</span> setConnectionTimeout(<span class="type">int</span> connectionTimeout) {
        <span class="local-variable">this</span>.connectionTimeout = connectionTimeout;
    }

    <span class="directive">public</span> <span class="type">boolean</span> isRedirect(<span class="type">int</span> rc) {
        <span class="keyword">return</span> (rc == <span class="predefined-type">HttpURLConnection</span>.HTTP_MOVED_PERM
                || rc == <span class="predefined-type">HttpURLConnection</span>.HTTP_MOVED_TEMP || rc == <span class="predefined-type">HttpURLConnection</span>.HTTP_SEE_OTHER);
    }

    <span class="directive">public</span> <span class="type">boolean</span> checkResponse(<span class="type">int</span> rc) {
        <span class="keyword">return</span> (rc == <span class="predefined-type">HttpURLConnection</span>.HTTP_OK || isRedirect(rc));
    }

    <span class="directive">public</span> <span class="type">boolean</span> checkResponseSuccess(<span class="type">int</span> rc) {
        <span class="keyword">return</span> (rc == <span class="predefined-type">HttpURLConnection</span>.HTTP_OK);
    }

    <span class="directive">private</span> <span class="directive">static</span> <span class="predefined-type">String</span> readInput(<span class="predefined-type">InputStream</span> in) <span class="directive">throws</span> <span class="exception">IOException</span> {
        <span class="predefined-type">ByteArrayOutputStream</span> out = <span class="keyword">new</span> <span class="predefined-type">ByteArrayOutputStream</span>();
        <span class="type">byte</span> bytes<span class="type">[]</span> = <span class="keyword">new</span> <span class="type">byte</span>[<span class="integer">1024</span>];

        <span class="type">int</span> n = in.read(bytes);

        <span class="keyword">while</span> (n != -<span class="integer">1</span>) {
            out.write(bytes, <span class="integer">0</span>, n);
            n = in.read(bytes);
        }

        <span class="keyword">return</span> <span class="keyword">new</span> <span class="predefined-type">String</span>(out.toString());
    }

    <span class="directive">public</span> HttpResponse fetch(<span class="predefined-type">String</span> url) <span class="directive">throws</span> PubnubException, <span class="exception">SocketTimeoutException</span> {
        <span class="keyword">return</span> fetch(url, <span class="predefined-constant">null</span>);
    }
</pre></div>
</div>
 </figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Testing Coderay]]></title>
    <link href="http://hddt.github.io/blog/2015/04/fourth-post/"/>
    <updated>2015-04-07T01:25:20+07:00</updated>
    <id>http://hddt.github.io/blog/2015/04/fourth-post</id>
    <content type="html"><![CDATA[<p>Su dung code ray</p>

<!--more-->

<h2 id="dung-code-blog-binh-thuong">Dung code blog binh thuong</h2>
<ol>
  <li>Highlight but no number ruby</li>
</ol>

<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">show</span>
  <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
    <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></div>

<ol>
  <li>Highlight with number ruby</li>
</ol>

<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="lineno">1</span> <span class="k">def</span> <span class="nf">show</span>
<span class="lineno">2</span>   <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
<span class="lineno">3</span>   <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
<span class="lineno">4</span>     <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
<span class="lineno">5</span>     <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
<span class="lineno">6</span>   <span class="k">end</span>
<span class="lineno">7</span> <span class="k">end</span></code></pre></div>

<ol>
  <li>Hight light python</li>
</ol>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">from django.core.exceptions import ObjectDoesNotExist
</span><span class="line">from django.contrib.contenttypes.models import ContentType</span></code></pre></td></tr></table></div></figure></notextile></div>

<h2 id="dung-coderay">Dung coderay</h2>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://fritz-hut.com">My Blog </a></figcaption> <table class="CodeRay"><tr>
  <td class="line-numbers"><pre><a href="#n1" name="n1">1</a>
<a href="#n2" name="n2">2</a>
<a href="#n3" name="n3">3</a>
<a href="#n4" name="n4">4</a>
<a href="#n5" name="n5">5</a>
<a href="#n6" name="n6">6</a>
<a href="#n7" name="n7">7</a>
<a href="#n8" name="n8">8</a>
<a href="#n9" name="n9">9</a>
<strong><a href="#n10" name="n10">10</a></strong>
<a href="#n11" name="n11">11</a>
</pre></td>
  <td class="code"><pre>
<span class="comment">// Get all the fiducials from the Sim proxy</span>
<span class="keyword">for</span> (<span class="predefined-type">int</span> f = <span class="integer">0</span>; f &lt; <span class="integer">6</span>; f++) {
      <span class="predefined-type">double</span> x, y, a;
      sprintf(fidBuff, <span class="string"><span class="delimiter">&quot;</span><span class="content">Fid%d</span><span class="delimiter">&quot;</span></span>, f+<span class="integer">1</span>);

      simProxy.GetPose2d(fidBuff, x, y, a);
      FiducialObjects[f][<span class="integer">0</span>] = f;
      FiducialObjects[f][<span class="integer">1</span>] = x;
      FiducialObjects[f][<span class="integer">2</span>] = y;
}
</pre></td>
</tr></table>
 </figure></notextile></div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption class="code-header"><span>This is a great example!</span> &mdash; <a href="http://fritz-hut.com">My Blog </a></figcaption> <div class="CodeRay">
  <div class="code"><pre>
<span class="comment">// Get all the fiducials from the Sim proxy</span>
<span class="keyword">for</span> (<span class="predefined-type">int</span> f = <span class="integer">0</span>; f &lt; <span class="integer">6</span>; f++) {
      <span class="predefined-type">double</span> x, y, a;
      sprintf(fidBuff, <span class="string"><span class="delimiter">&quot;</span><span class="content">Fid%d</span><span class="delimiter">&quot;</span></span>, f+<span class="integer">1</span>);

      simProxy.GetPose2d(fidBuff, x, y, a);
      FiducialObjects[f][<span class="integer">0</span>] = f;
      FiducialObjects[f][<span class="integer">1</span>] = x;
      FiducialObjects[f][<span class="integer">2</span>] = y;
}
</pre></div>
</div>
 </figure></notextile></div>

<p><code>inline code</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
&lt;sarcasm&gt;Ooooh, sarcasm... How original!&lt;/sarcasm&gt;
</pre></div>
</div>
 </figure></notextile></div>

<h4 id="dung-3-dau-backtick">Dung 3 dau backtick</h4>
<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
</pre></td><td class="code"><pre><code class="ruby"><span class="line"><span class="k">def</span> <span class="nf">show</span>
</span><span class="line">  <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
</span><span class="line">  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
</span><span class="line">    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
</span><span class="line">    <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
</span><span class="line">  <span class="k">end</span>
</span><span class="line"><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
<pre lang="ruby"><code>def hello
  puts "hello world"
end
</code></pre>

<p>inline code <code lang="ruby">def hello</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Third Post]]></title>
    <link href="http://hddt.github.io/blog/2015/04/third-post/"/>
    <updated>2015-04-07T00:01:18+07:00</updated>
    <id>http://hddt.github.io/blog/2015/04/third-post</id>
    <content type="html"><![CDATA[<p><img src="http://m.f29.img.vnecdn.net/2015/04/06/800px-Kobalt-electrolytic-and-9277-1867-1428315640.jpg" alt="phong su phong xa" /></p>

<p>Coban (ký hiệu hóa học Co) là kim loại có thể ổn định (không có tính phóng xạ khi được tìm thấy trong tự nhiên) hoặc bất ổn (có tính phóng xạ, nhân tạo). Đồng vị phóng xạ phổ biến nhất của Co là Co-60.</p>

<!--more-->

<p>Introduction
It’s been a while that I am writing a blog, but mostly in English, being my native tongue Spanish I wanted to also write in that language, but I needed to find the way to keep one site being it multi-lingual. Now that I am using Jekyll for more than a year, I started to look a way to write in English and Spanish in this site. But of course following the best practices about having a site in two or more languages.</p>

<p>You need to have all labels, and menus in one language per page, you do not have to mix both languages in a single page, I have found the way, and now I want to share it with you.</p>

<p>Nuclit phóng xạ dùng cho ngành công nghiệp hay điều trị y tế thường được đặt trong các thùng chứa kim loại kín và gọi là nguồn phóng xạ. Nguồn phóng xạ y tế hoặc công nghiệp đôi khi có thể bị mất hoặc đánh cắp. Các nhà khoa học cảnh báo rằng trong một số trường hợp, chúng ta có thể cầm nó trên tay mà không biết đó là gì và vô tình tiếp xúc. Chúng cũng có thể được tìm thấy ở nhiều bãi rác.</p>

<p>Nguồn phóng xạ có vỏ kim loại, do đó dễ lẫn với kim loại phế liệu và không bị phát hiện trong quá trình đưa đến cơ sở tái chế. Các cơ sở công nghiệp thường sử dụng máy dò phóng xạ để phát hiện nguy cơ tiềm ẩn, tuy nhiên các nguồn lẫn trong đống phế liệu lớn có thể không được phát hiện từ đầu. Co-60 có thể thải ra môi trường qua lỗi rò rỉ hoặc tràn qua nhà máy điện hạt nhân, trong chất thải rắn từ các nhà máy này.</p>

<p>Theo Cơ quan Bảo vệ Môi trường Mỹ, tất cả các bức xạ ion hóa, bao gồm Co-60, đều có thể gây ung thư. Mức độ ảnh hưởng đến sức khỏe tùy thuộc thời gian phơi nhiễm, khoảng cách tiếp xúc từ nguồn hoặc điều kiện tiếp xúc (qua tiêu hóa hay hít vào). Co-60 là nguồn phát tia gamma, nên phơi nhiễm bên ngoài với một nguồn lớn Co-60 có thể gây bỏng da, hội chứng nhiễm phóng xạ cấp tính hoặc tử vong. Hầu hết Co-60 đều được thải qua phân, tuy nhiên một lượng nhỏ vẫn được gan, thận và xương hấp thụ và có thể gây ung thư.</p>

<p>UBND tỉnh Bà Rịa - Vũng Tàu sáng nay tổ chức cuộc họp khẩn với các ban ngành sau khi nhận thông tin Nhà máy thép Pomina 3 bị thất lạc nguồn phóng xạ. Nguồn phóng xạ bị thất lạc đượcc dùng để đo mức thép lỏng trên dây chuyền sản xuất phôi thép.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Third Post]]></title>
    <link href="http://hddt.github.io/blog/2015/04/third-post/"/>
    <updated>2015-04-07T00:01:18+07:00</updated>
    <id>http://hddt.github.io/blog/2015/04/third-post</id>
    <content type="html"><![CDATA[<p><img src="http://m.f29.img.vnecdn.net/2015/04/06/800px-Kobalt-electrolytic-and-9277-1867-1428315640.jpg" alt="phong su phong xa" /></p>

<p>Coban (ký hiệu hóa học Co) là kim loại có thể ổn định (không có tính phóng xạ khi được tìm thấy trong tự nhiên) hoặc bất ổn (có tính phóng xạ, nhân tạo). Đồng vị phóng xạ phổ biến nhất của Co là Co-60.</p>

<!--more-->

<p>Co-60 có tính phóng xạ được Glenn T. Seaborg và John Livingood, hai chuyên gia đại học California - Berkeley, phát hiện vào cuối những năm 1930.</p>

<p>{ % coderay lang:cplusplus linenos:true This is a great example! http://fritz-hut.com My Blog % }
// Get all the fiducials from the Sim proxy
for (int f = 0; f &lt; 6; f++) {
      double x, y, a;
      sprintf(fidBuff, “Fid%d”, f+1);</p>

<pre><code>  simProxy.GetPose2d(fidBuff, x, y, a);
  FiducialObjects[f][0] = f;
  FiducialObjects[f][1] = x;
  FiducialObjects[f][2] = y; } { % endcoderay % }
</code></pre>

<p>Co không có tính phóng xạ thường có trong quặng và được sử dụng để tạo màu xanh cho gốm sứ và thủy tinh. Nuclit phóng xạ Co-60 được tạo ra để sử dụng trong các máy gia tốc tuyến tính. Nó cũng được tạo ra như một sản phẩm phụ của hoạt động lò phản ứng hạt nhân. Co-60 được sử dụng trong nhiều ứng dụng công nghiệp, xạ trị y tế, và ngày càng được áp dụng trong quy trình tiệt trùng một số thực phẩm mà không làm hư hỏng sản phẩm. Tương tự như hoạt động của tia X, Co-60 có thể dùng cho kỹ thuật chụp công nghiệp để phát hiện lỗi cấu trúc trong bộ phận kim loại.</p>

<p>Nuclit phóng xạ dùng cho ngành công nghiệp hay điều trị y tế thường được đặt trong các thùng chứa kim loại kín và gọi là nguồn phóng xạ. Nguồn phóng xạ y tế hoặc công nghiệp đôi khi có thể bị mất hoặc đánh cắp. Các nhà khoa học cảnh báo rằng trong một số trường hợp, chúng ta có thể cầm nó trên tay mà không biết đó là gì và vô tình tiếp xúc. Chúng cũng có thể được tìm thấy ở nhiều bãi rác.</p>

<p>Nguồn phóng xạ có vỏ kim loại, do đó dễ lẫn với kim loại phế liệu và không bị phát hiện trong quá trình đưa đến cơ sở tái chế. Các cơ sở công nghiệp thường sử dụng máy dò phóng xạ để phát hiện nguy cơ tiềm ẩn, tuy nhiên các nguồn lẫn trong đống phế liệu lớn có thể không được phát hiện từ đầu. Co-60 có thể thải ra môi trường qua lỗi rò rỉ hoặc tràn qua nhà máy điện hạt nhân, trong chất thải rắn từ các nhà máy này.</p>

<p>Theo Cơ quan Bảo vệ Môi trường Mỹ, tất cả các bức xạ ion hóa, bao gồm Co-60, đều có thể gây ung thư. Mức độ ảnh hưởng đến sức khỏe tùy thuộc thời gian phơi nhiễm, khoảng cách tiếp xúc từ nguồn hoặc điều kiện tiếp xúc (qua tiêu hóa hay hít vào). Co-60 là nguồn phát tia gamma, nên phơi nhiễm bên ngoài với một nguồn lớn Co-60 có thể gây bỏng da, hội chứng nhiễm phóng xạ cấp tính hoặc tử vong. Hầu hết Co-60 đều được thải qua phân, tuy nhiên một lượng nhỏ vẫn được gan, thận và xương hấp thụ và có thể gây ung thư.</p>

<p>UBND tỉnh Bà Rịa - Vũng Tàu sáng nay tổ chức cuộc họp khẩn với các ban ngành sau khi nhận thông tin Nhà máy thép Pomina 3 bị thất lạc nguồn phóng xạ. Nguồn phóng xạ bị thất lạc đượcc dùng để đo mức thép lỏng trên dây chuyền sản xuất phôi thép.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bai Viet Dau Tien]]></title>
    <link href="http://hddt.github.io/blog/2015/04/bai-viet-dau-tien/"/>
    <updated>2015-04-07T00:01:18+07:00</updated>
    <id>http://hddt.github.io/blog/2015/04/bai-viet-dau-tien</id>
    <content type="html"><![CDATA[<p><img src="http://m.f29.img.vnecdn.net/2015/04/06/800px-Kobalt-electrolytic-and-9277-1867-1428315640.jpg" alt="phong su phong xa" /></p>

<p>Coban (ký hiệu hóa học Co) là kim loại có thể ổn định (không có tính phóng xạ khi được tìm thấy trong tự nhiên) hoặc bất ổn (có tính phóng xạ, nhân tạo). Đồng vị phóng xạ phổ biến nhất của Co là Co-60.</p>

<!--more-->

<p>Co-60 có tính phóng xạ được Glenn T. Seaborg và John Livingood, hai chuyên gia đại học California - Berkeley, phát hiện vào cuối những năm 1930.</p>

<p>{ % coderay lang:cplusplus linenos:true This is a great example! http://fritz-hut.com My Blog % }
// Get all the fiducials from the Sim proxy
for (int f = 0; f &lt; 6; f++) {
      double x, y, a;
      sprintf(fidBuff, “Fid%d”, f+1);</p>

<pre><code>  simProxy.GetPose2d(fidBuff, x, y, a);
  FiducialObjects[f][0] = f;
  FiducialObjects[f][1] = x;
  FiducialObjects[f][2] = y; } { % endcoderay % }
</code></pre>

<p>Co không có tính phóng xạ thường có trong quặng và được sử dụng để tạo màu xanh cho gốm sứ và thủy tinh. Nuclit phóng xạ Co-60 được tạo ra để sử dụng trong các máy gia tốc tuyến tính. Nó cũng được tạo ra như một sản phẩm phụ của hoạt động lò phản ứng hạt nhân. Co-60 được sử dụng trong nhiều ứng dụng công nghiệp, xạ trị y tế, và ngày càng được áp dụng trong quy trình tiệt trùng một số thực phẩm mà không làm hư hỏng sản phẩm. Tương tự như hoạt động của tia X, Co-60 có thể dùng cho kỹ thuật chụp công nghiệp để phát hiện lỗi cấu trúc trong bộ phận kim loại.</p>

<p>Nuclit phóng xạ dùng cho ngành công nghiệp hay điều trị y tế thường được đặt trong các thùng chứa kim loại kín và gọi là nguồn phóng xạ. Nguồn phóng xạ y tế hoặc công nghiệp đôi khi có thể bị mất hoặc đánh cắp. Các nhà khoa học cảnh báo rằng trong một số trường hợp, chúng ta có thể cầm nó trên tay mà không biết đó là gì và vô tình tiếp xúc. Chúng cũng có thể được tìm thấy ở nhiều bãi rác.</p>

<p>Nguồn phóng xạ có vỏ kim loại, do đó dễ lẫn với kim loại phế liệu và không bị phát hiện trong quá trình đưa đến cơ sở tái chế. Các cơ sở công nghiệp thường sử dụng máy dò phóng xạ để phát hiện nguy cơ tiềm ẩn, tuy nhiên các nguồn lẫn trong đống phế liệu lớn có thể không được phát hiện từ đầu. Co-60 có thể thải ra môi trường qua lỗi rò rỉ hoặc tràn qua nhà máy điện hạt nhân, trong chất thải rắn từ các nhà máy này.</p>

<p>Theo Cơ quan Bảo vệ Môi trường Mỹ, tất cả các bức xạ ion hóa, bao gồm Co-60, đều có thể gây ung thư. Mức độ ảnh hưởng đến sức khỏe tùy thuộc thời gian phơi nhiễm, khoảng cách tiếp xúc từ nguồn hoặc điều kiện tiếp xúc (qua tiêu hóa hay hít vào). Co-60 là nguồn phát tia gamma, nên phơi nhiễm bên ngoài với một nguồn lớn Co-60 có thể gây bỏng da, hội chứng nhiễm phóng xạ cấp tính hoặc tử vong. Hầu hết Co-60 đều được thải qua phân, tuy nhiên một lượng nhỏ vẫn được gan, thận và xương hấp thụ và có thể gây ung thư.</p>

<p>UBND tỉnh Bà Rịa - Vũng Tàu sáng nay tổ chức cuộc họp khẩn với các ban ngành sau khi nhận thông tin Nhà máy thép Pomina 3 bị thất lạc nguồn phóng xạ. Nguồn phóng xạ bị thất lạc đượcc dùng để đo mức thép lỏng trên dây chuyền sản xuất phôi thép.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Second Post]]></title>
    <link href="http://hddt.github.io/blog/2015/04/second-post/"/>
    <updated>2015-04-06T23:38:14+07:00</updated>
    <id>http://hddt.github.io/blog/2015/04/second-post</id>
    <content type="html"><![CDATA[<p>Day la phan excerp
Viet thoai mai
<!--more-->
1. Highlight but no number ruby</p>

<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">show</span>
  <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
    <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></div>

<ol>
  <li>Highlight with number ruby</li>
</ol>

<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="lineno">1</span> <span class="k">def</span> <span class="nf">show</span>
<span class="lineno">2</span>   <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
<span class="lineno">3</span>   <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
<span class="lineno">4</span>     <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
<span class="lineno">5</span>     <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
<span class="lineno">6</span>   <span class="k">end</span>
<span class="lineno">7</span> <span class="k">end</span></code></pre></div>

<ol>
  <li>Hight light python</li>
</ol>
<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
</pre></td><td class="code"><pre><code class=""><span class="line">from django.core.exceptions import ObjectDoesNotExist
</span><span class="line">from django.contrib.contenttypes.models import ContentType</span></code></pre></td></tr></table></div></figure></notextile></div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Post]]></title>
    <link href="http://hddt.github.io/blog/2015/04/first-post/"/>
    <updated>2015-04-06T23:14:49+07:00</updated>
    <id>http://hddt.github.io/blog/2015/04/first-post</id>
    <content type="html"><![CDATA[<p>Day la phan excerp
Viet thoai mai</p>

<p>nha nay la phan noi dung</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Toan bo phan tren:
</span><span class="line">---
</span><span class="line">layout: post
</span><span class="line">title: "Test and note something-post02"
</span><span class="line">date: 2015-03-30 18:48:50 +0700
</span><span class="line">comments: true
</span><span class="line">categories: 
</span><span class="line">- test
</span><span class="line">- note
</span><span class="line">- persional
</span><span class="line">excerpt_separator: &lt;!--more--&gt;
</span><span class="line">---
</span><span class="line">Day la phan excerp
</span><span class="line">Viet thoai mai
</span><span class="line">&lt;!--more--&gt;
</span><span class="line">
</span><span class="line">Day la phan noi dung</span></code></pre></td></tr></table></div></figure></notextile></div>

<h3 id="test-code">Test code</h3>

<ol>
  <li>Highlight but no number ruby</li>
</ol>

<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">show</span>
  <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
  <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
    <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
    <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
  <span class="k">end</span>
<span class="k">end</span></code></pre></div>

<ol>
  <li>Highlight with number ruby</li>
</ol>

<div class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="lineno">1</span> <span class="k">def</span> <span class="nf">show</span>
<span class="lineno">2</span>   <span class="vi">@widget</span> <span class="o">=</span> <span class="no">Widget</span><span class="p">(</span><span class="n">params</span><span class="o">[</span><span class="ss">:id</span><span class="o">]</span><span class="p">)</span>
<span class="lineno">3</span>   <span class="n">respond_to</span> <span class="k">do</span> <span class="o">|</span><span class="nb">format</span><span class="o">|</span>
<span class="lineno">4</span>     <span class="nb">format</span><span class="o">.</span><span class="n">html</span> <span class="c1"># show.html.erb</span>
<span class="lineno">5</span>     <span class="nb">format</span><span class="o">.</span><span class="n">json</span> <span class="p">{</span> <span class="n">render</span> <span class="ss">json</span><span class="p">:</span> <span class="vi">@widget</span> <span class="p">}</span>
<span class="lineno">6</span>   <span class="k">end</span>
<span class="lineno">7</span> <span class="k">end</span></code></pre></div>

<ol>
  <li>Hight light python</li>
</ol>

<div class="highlight"><pre><code class="language-python" data-lang="python"><span class="lineno"> 1</span> <span class="kn">from</span> <span class="nn">django.core.exceptions</span> <span class="kn">import</span> <span class="n">ObjectDoesNotExist</span>
<span class="lineno"> 2</span> <span class="kn">from</span> <span class="nn">django.contrib.contenttypes.models</span> <span class="kn">import</span> <span class="n">ContentType</span>
<span class="lineno"> 3</span> 
<span class="lineno"> 4</span> 
<span class="lineno"> 5</span> <span class="k">class</span> <span class="nc">PermissionList</span><span class="p">(</span><span class="n">generics</span><span class="o">.</span><span class="n">ListAPIView</span><span class="p">):</span>
<span class="lineno"> 6</span>     <span class="n">model</span> <span class="o">=</span> <span class="n">Permission</span>
<span class="lineno"> 7</span>     <span class="n">queryset</span> <span class="o">=</span> <span class="n">Permission</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
<span class="lineno"> 8</span>     <span class="c"># permission_classes = (permissions.IsAuthenticatedOrReadOnly,)</span>
<span class="lineno"> 9</span>     <span class="n">serializer_class</span> <span class="o">=</span> <span class="n">PermissionSerializer</span>
<span class="lineno">10</span> 
<span class="lineno">11</span> <span class="k">class</span> <span class="nc">GroupList</span><span class="p">(</span><span class="n">generics</span><span class="o">.</span><span class="n">ListCreateAPIView</span><span class="p">):</span>
<span class="lineno">12</span>     <span class="n">model</span> <span class="o">=</span> <span class="n">Group</span>
<span class="lineno">13</span>     <span class="n">queryset</span> <span class="o">=</span> <span class="n">Group</span><span class="o">.</span><span class="n">objects</span><span class="o">.</span><span class="n">all</span><span class="p">()</span>
<span class="lineno">14</span>     <span class="c"># permission_classes = (permissions.IsAuthenticatedOrReadOnly,)</span>
<span class="lineno">15</span>     <span class="n">serializer_class</span> <span class="o">=</span> <span class="n">GroupSerializer</span></code></pre></div>

<ol>
  <li>Highlight C</li>
</ol>

<div class="highlight"><pre><code class="language-c" data-lang="c"><span class="lineno"> 1</span> <span class="c1">// ChuongIV-Phuong phap Day Cung.</span>
<span class="lineno"> 2</span> <span class="c1">// phuong trinh trang 24</span>
<span class="lineno"> 3</span> <span class="cp">#include &lt;iostream&gt;</span>
<span class="lineno"> 4</span> <span class="cp">#include &lt;cmath&gt;</span>
<span class="lineno"> 5</span> <span class="cp">#define EPS 0.001</span>
<span class="lineno"> 6</span> <span class="n">using</span> <span class="n">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="lineno"> 7</span> 
<span class="lineno"> 8</span> <span class="c1">// f(x) = 2^x + x -4</span>
<span class="lineno"> 9</span> <span class="kt">float</span> <span class="nf">f</span><span class="p">(</span><span class="kt">float</span> <span class="n">x</span><span class="p">)</span>
<span class="lineno">10</span> <span class="p">{</span>
<span class="lineno">11</span> 	<span class="k">return</span> <span class="n">pow</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="n">x</span><span class="p">)</span> <span class="o">+</span> <span class="n">x</span> <span class="o">-</span><span class="mi">4</span><span class="p">;</span>
<span class="lineno">12</span> <span class="p">}</span>
<span class="lineno">13</span> 
<span class="lineno">14</span> 
<span class="lineno">15</span> <span class="kt">void</span> <span class="nf">thongBaoKetQua</span><span class="p">(</span><span class="kt">float</span> <span class="n">kq</span><span class="p">,</span> <span class="kt">bool</span> <span class="n">coNghiem</span> <span class="o">=</span> <span class="nb">true</span><span class="p">)</span>
<span class="lineno">16</span> <span class="p">{</span>
<span class="lineno">17</span> 	<span class="k">if</span> <span class="p">(</span><span class="n">coNghiem</span><span class="p">)</span>
<span class="lineno">18</span> 		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;Phuong trinh co nghiem la: &quot;</span><span class="o">&lt;&lt;</span><span class="n">kq</span><span class="p">;</span>
<span class="lineno">19</span> 	<span class="k">else</span> <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">&quot;Phuong trinh khong co nghiem trong khoang nay&quot;</span><span class="p">;</span>
<span class="lineno">20</span> <span class="p">}</span></code></pre></div>

<ol>
  <li>hightlight</li>
</ol>

<div class="highlight"><pre><code class="language-c#" data-lang="c#"><span class="lineno"> 1</span> <span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="lineno"> 2</span> <span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="lineno"> 3</span> <span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
<span class="lineno"> 4</span> <span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="lineno"> 5</span> <span class="k">using</span> <span class="nn">System.Threading.Tasks</span><span class="p">;</span>
<span class="lineno"> 6</span>  
<span class="lineno"> 7</span> <span class="k">namespace</span> <span class="nn">Dates</span>
<span class="lineno"> 8</span> <span class="p">{</span>
<span class="lineno"> 9</span>     <span class="k">class</span> <span class="nc">Program</span>
<span class="lineno">10</span>     <span class="p">{</span>
<span class="lineno">11</span>         <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
<span class="lineno">12</span>         <span class="p">{</span>
<span class="lineno">13</span>             <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Today</span><span class="p">.</span><span class="n">ToLongDateString</span><span class="p">());</span>
<span class="lineno">14</span>             <span class="c1">//DateTime TimeObj_0;</span>
<span class="lineno">15</span>             <span class="c1">//DateTime TimeObj_1;</span>
<span class="lineno">16</span>             <span class="kt">string</span><span class="p">[]</span> <span class="n">date</span> <span class="p">=</span> <span class="p">{</span> <span class="s">&quot;&quot;</span><span class="p">,</span> <span class="s">&quot;&quot;</span> <span class="p">};</span>
<span class="lineno">17</span>  
<span class="lineno">18</span>  
<span class="lineno">19</span>             <span class="k">do</span>
<span class="lineno">20</span>             <span class="p">{</span>
<span class="lineno">21</span>                 <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;&quot;</span><span class="p">);</span>
<span class="lineno">22</span>                 <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;Enter a date in YMD format:&quot;</span><span class="p">);</span>
<span class="lineno">23</span>                 <span class="kt">string</span> <span class="n">input</span> <span class="p">=</span> <span class="n">Console</span><span class="p">.</span><span class="n">ReadLine</span><span class="p">();</span> <span class="c1">// Example: 2015-07-01 2015-07-04</span>
<span class="lineno">24</span>                 <span class="k">if</span> <span class="p">(</span><span class="n">input</span><span class="p">.</span><span class="n">Equals</span><span class="p">(</span><span class="s">&quot;quit&quot;</span><span class="p">))</span> <span class="k">break</span><span class="p">;</span>
<span class="lineno">25</span>  
<span class="lineno">26</span>                 <span class="k">try</span>
<span class="lineno">27</span>                 <span class="p">{</span>
<span class="lineno">28</span>                     <span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">input</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">10</span><span class="p">)).</span><span class="n">ToLongDateString</span><span class="p">()</span>
<span class="lineno">29</span>                         <span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">input</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">10</span><span class="p">)).</span><span class="n">ToLongDateString</span><span class="p">().</span><span class="n">IndexOf</span><span class="p">(</span><span class="sc">&#39;,&#39;</span><span class="p">)</span> <span class="p">+</span> <span class="m">2</span><span class="p">);</span>
<span class="lineno">30</span>                     <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot; &quot;</span> <span class="p">+</span> <span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">]);</span>
<span class="lineno">31</span>                     <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="n">DateTime</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">input</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="m">11</span><span class="p">,</span> <span class="m">10</span><span class="p">)).</span><span class="n">ToLongDateString</span><span class="p">()</span>
<span class="lineno">32</span>                         <span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">input</span><span class="p">.</span><span class="n">Substring</span><span class="p">(</span><span class="m">11</span><span class="p">,</span> <span class="m">10</span><span class="p">)).</span><span class="n">ToLongDateString</span><span class="p">().</span><span class="n">IndexOf</span><span class="p">(</span><span class="sc">&#39;,&#39;</span><span class="p">)</span> <span class="p">+</span> <span class="m">2</span><span class="p">);</span>
<span class="lineno">33</span>                     <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot; &quot;</span> <span class="p">+</span> <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">]);</span>
<span class="lineno">34</span>  
<span class="lineno">35</span>                     <span class="c1">// Remove equal stuffs</span>
<span class="lineno">36</span>                     <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;   -&quot;</span> <span class="p">+</span> <span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">5</span><span class="p">,</span> <span class="m">5</span><span class="p">));</span>
<span class="lineno">37</span>                     <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;   -&quot;</span> <span class="p">+</span> <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">5</span><span class="p">,</span> <span class="m">5</span><span class="p">));</span>
<span class="lineno">38</span>                     <span class="k">if</span> <span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">5</span><span class="p">,</span> <span class="m">5</span><span class="p">).</span><span class="n">Equals</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">5</span><span class="p">,</span> <span class="m">5</span><span class="p">)))</span>
<span class="lineno">39</span>                     <span class="p">{</span>
<span class="lineno">40</span>                         <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Remove</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">5</span><span class="p">,</span> <span class="m">5</span><span class="p">);</span> <span class="c1">// Remove year from the second date</span>
<span class="lineno">41</span>                         <span class="k">if</span> <span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="sc">&#39; &#39;</span><span class="p">)</span> <span class="p">-</span> <span class="m">1</span><span class="p">).</span><span class="n">Equals</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="sc">&#39; &#39;</span><span class="p">)</span> <span class="p">-</span> <span class="m">1</span><span class="p">)))</span>
<span class="lineno">42</span>                         <span class="p">{</span>
<span class="lineno">43</span>                             <span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Remove</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">5</span><span class="p">,</span> <span class="m">5</span><span class="p">);</span> <span class="c1">// Remove year from the first date</span>
<span class="lineno">44</span>                             <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Remove</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="sc">&#39; &#39;</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span> <span class="c1">// Remove month from the second date</span>
<span class="lineno">45</span>                         <span class="p">}</span>
<span class="lineno">46</span>                         <span class="c1">// If less than a year apart</span>
<span class="lineno">47</span>                         <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span> <span class="p">(</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">]).</span><span class="n">Subtract</span><span class="p">(</span><span class="n">DateTime</span><span class="p">.</span><span class="n">Parse</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">])).</span><span class="n">TotalDays</span> <span class="p">&lt;</span> <span class="m">365</span> <span class="p">)</span> <span class="cm">/*&amp;&amp; !(DateTime.Parse(date[0]).AddYears(1).Equals(DateTime.Parse(date[1])))*/</span> <span class="p">)</span>
<span class="lineno">48</span>                             <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Remove</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">5</span><span class="p">,</span> <span class="m">5</span><span class="p">);</span> <span class="c1">// Remove year from the first date</span>
<span class="lineno">49</span>                     <span class="p">}</span>
<span class="lineno">50</span>  
<span class="lineno">51</span>                     <span class="cp">#region Debugging writes</span>
<span class="lineno">52</span>                     <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">2</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="lineno">53</span>                     <span class="p">{</span>
<span class="lineno">54</span>                         <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;date[{0}] = &quot;</span> <span class="p">+</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">i</span><span class="p">);</span>
<span class="lineno">55</span>                         <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;date[{0}].IndexOf(\&quot;,\&quot;) = &quot;</span> <span class="p">+</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">),</span> <span class="n">i</span><span class="p">);</span>
<span class="lineno">56</span>                         <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;date[{0}].Substring(date[{0}].IndexOf(\&quot;,\&quot;)) = &quot;</span> <span class="p">+</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">)),</span> <span class="n">i</span><span class="p">);</span>
<span class="lineno">57</span>                     <span class="p">}</span>
<span class="lineno">58</span>                     <span class="cp">#endregion</span>
<span class="lineno">59</span>  
<span class="lineno">60</span>                     <span class="c1">// Add suffixes to dates</span>
<span class="lineno">61</span>                     <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">2</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="lineno">62</span>                         <span class="k">if</span> <span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">)</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">).</span><span class="n">Equals</span><span class="p">(</span><span class="s">&quot;1&quot;</span><span class="p">))</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Insert</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">),</span> <span class="s">&quot;st&quot;</span><span class="p">);</span>
<span class="lineno">63</span>                         <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">)</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">).</span><span class="n">Equals</span><span class="p">(</span><span class="s">&quot;2&quot;</span><span class="p">))</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Insert</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">),</span> <span class="s">&quot;nd&quot;</span><span class="p">);</span>
<span class="lineno">64</span>                         <span class="k">else</span> <span class="nf">if</span> <span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">)</span> <span class="p">-</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">).</span><span class="n">Equals</span><span class="p">(</span><span class="s">&quot;3&quot;</span><span class="p">))</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Insert</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">),</span> <span class="s">&quot;rd&quot;</span><span class="p">);</span>
<span class="lineno">65</span>                         <span class="k">else</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="p">=</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Insert</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">IndexOf</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">),</span> <span class="s">&quot;th&quot;</span><span class="p">);</span>
<span class="lineno">66</span>                     <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">2</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="lineno">67</span>                         <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;date[{0}] = &quot;</span> <span class="p">+</span> <span class="n">date</span><span class="p">[</span><span class="n">i</span><span class="p">],</span> <span class="n">i</span><span class="p">);</span>
<span class="lineno">68</span>  
<span class="lineno">69</span>                     <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span>
<span class="lineno">70</span>                         <span class="p">((</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span><span class="p">).</span><span class="n">Equals</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">))</span> <span class="p">?</span> <span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Remove</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span><span class="p">))</span> <span class="p">:</span> <span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">0</span><span class="p">]))</span> <span class="p">+</span> <span class="s">&quot; - &quot;</span> <span class="p">+</span>
<span class="lineno">71</span>                         <span class="p">((</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Substring</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span><span class="p">).</span><span class="n">Equals</span><span class="p">(</span><span class="s">&quot;,&quot;</span><span class="p">))</span> <span class="p">?</span> <span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Remove</span><span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">].</span><span class="n">Length</span> <span class="p">-</span> <span class="m">1</span><span class="p">))</span> <span class="p">:</span> <span class="p">(</span><span class="n">date</span><span class="p">[</span><span class="m">1</span><span class="p">])));</span>
<span class="lineno">72</span>                 <span class="p">}</span>
<span class="lineno">73</span>                 <span class="k">catch</span> <span class="p">(</span><span class="n">FormatException</span><span class="p">)</span> <span class="p">{</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;* Invalid date format: Most likely becuase that one of the dates doesn&#39;t exist&quot;</span><span class="p">);</span> <span class="p">}</span>
<span class="lineno">74</span>                 <span class="k">catch</span> <span class="p">(</span><span class="n">IndexOutOfRangeException</span><span class="p">)</span> <span class="p">{</span> <span class="n">Console</span><span class="p">.</span><span class="n">WriteLine</span><span class="p">(</span><span class="s">&quot;* Index ouf of range exexpetion&quot;</span><span class="p">);</span>  <span class="p">}</span>
<span class="lineno">75</span>             <span class="p">}</span> 
<span class="lineno">76</span>             <span class="k">while</span> <span class="p">(</span><span class="k">true</span><span class="p">);</span>
<span class="lineno">77</span>         <span class="p">}</span>
<span class="lineno">78</span>     <span class="p">}</span>
<span class="lineno">79</span> <span class="p">}</span></code></pre></div>

<ol>
  <li>highlight</li>
</ol>

<div class="highlight"><pre><code class="language-java" data-lang="java"><span class="lineno"> 1</span> <span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>
<span class="lineno"> 2</span> <span class="kn">import</span> <span class="nn">java.lang.*</span><span class="o">;</span>
<span class="lineno"> 3</span> <span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="lineno"> 4</span>  
<span class="lineno"> 5</span> <span class="kd">class</span> <span class="nc">MethodDemo1</span> <span class="o">{</span>
<span class="lineno"> 6</span>     <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">numbering</span><span class="o">()</span> <span class="o">{</span>
<span class="lineno"> 7</span> 		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="lineno"> 8</span> 		<span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno"> 9</span> 			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
<span class="lineno">10</span> 			<span class="n">i</span><span class="o">++;</span>
<span class="lineno">11</span> 		<span class="o">}</span>
<span class="lineno">12</span> 	<span class="o">}</span>
<span class="lineno">13</span>  
<span class="lineno">14</span> 	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">15</span> 		<span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
<span class="lineno">16</span> 		<span class="k">while</span> <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">17</span> 			<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">i</span><span class="o">);</span>
<span class="lineno">18</span> 			<span class="n">i</span><span class="o">++;</span>
<span class="lineno">19</span> 	<span class="o">}</span>
<span class="lineno">20</span> <span class="o">}</span></code></pre></div>

<h2 id="test-tieng-viet">Test tieng viet</h2>

<p>Ngoài ra, lãnh đạo Cục Hàng không cho biết, sẽ tăng cường an ninh trên máy bay theo nguyên tắc “hai người trong buồng lái” theo hướng đưa tiếp viên trưởng vào buồng lái khi một phi công cần đi ra ngoài.</p>

<p>“Nếu đưa thêm một phi công nữa vào buồng lái để có 3 phi công trên chuyến bay thì rất khó áp dụng. Bởi không chỉ làm tăng thêm nhân lực mà còn tăng thêm cả chi phí”, ông Thanh nói.</p>

<p>Theo lãnh đạo Cục Hàng không, sau vụ khủng bố ở Mỹ vào ngày 11/9/2001, để chống thâm nhập từ bên ngoài nên buồng lái của phi công có thêm chốt cài, mật mã để mở cửa. Tuy nhiên, với vụ tai nạn máy bay của Đức vừa qua thì cơ phó đã lợi dụng chốt cài này để khóa cửa. Do đó, ngành hàng không các nước đều không xét tới chốt cài này mà chỉ tăng cường thêm giải pháp để khắc phục hạn chế rủi ro theo nguyên tắc “hai người trong buồng lái”.</p>

<p>Đại diện một số hãng hàng không Việt Nam cũng khẳng định tăng cường an ninh hàng không sau vụ tai nạn máy bay Germanwings. Hiện nay một số hãng bay đã áp dụng quy định, phải có một tiếp viên trong buồng lái mỗi khi một phi công đi ra cho tới khi quay trở lại.</p>

<p>Máy bay Germanwings của Đức đâm xuống núi Alps (Pháp) ngày 24/3 làm 150 hành khách thiệt mạng. Kết quả điều tra ban đầu cho thấy cơ phó chuyến bay đã cố tình vô hiệu hóa hệ thống khóa cửa từ bên trong buồng lái để thực hiện các hành vi cực đoan khi cơ trưởng không có mặt.</p>

]]></content>
  </entry>
  
</feed>
